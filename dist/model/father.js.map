{"version":3,"sources":["../../src/model/father.js"],"names":["Schema","mongoose","FatherSchema","name","type","String","required","age","Number","position","default","coordinates","sons","typer","Types","ObjectId","ref","module","exports","model"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,IAAIA,SAASC,mBAASD,MAAtB;;AAEA,IAAIE,eAAe,IAAIF,MAAJ,CAAW;AAC5BG,QAAM;AACJC,UAAOC,MADH;AAEJC,cAAU;AAFN,GADsB;AAK5BC,OAAKC,MALuB;AAM5BC,YAAU;AACRL,UAAM,EAAEA,MAAMC,MAAR,EAAgBK,SAAS,OAAzB,EADE;AAERC,iBAAa,CAACH,MAAD;AAFL,GANkB;AAU5BI,QAAM,CAAC;AACLC,WAAOb,OAAOc,KAAP,CAAaC,QADf;AAELC,SAAK;AAFA,GAAD;AAVsB,CAAX,CAAnB;;AAkBAC,OAAOC,OAAP,GAAiBjB,mBAASkB,KAAT,CAAe,QAAf,EAAyBjB,YAAzB,CAAjB","file":"father.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport Son from './son';\r\nlet Schema = mongoose.Schema;\r\n\r\nlet FatherSchema = new Schema({\r\n  name: {\r\n    type:  String,\r\n    required: true\r\n  },\r\n  age: Number,\r\n  position: {\r\n    type: { type: String, default: 'Point'},\r\n    coordinates: [Number]\r\n  },\r\n  sons: [{\r\n    typer: Schema.Types.ObjectId,\r\n    ref: 'Son'\r\n  }]\r\n});\r\n\r\n\r\n\r\nmodule.exports = mongoose.model('Father', FatherSchema);\r\n"]}